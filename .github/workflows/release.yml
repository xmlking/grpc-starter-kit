name: Release
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: Build with the given version.
        default: v1.0.0
        required: true
      dey-run:
        description: Build with dey-run.
        default:
        required: false
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write # needed to write releases
  id-token: write # needed for keyless signing
  packages: write # needed for ghcr access

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      #          ref: main
      - name: Fetch all tags
        run: git fetch --force --tags
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Set up buf
        uses: bufbuild/buf-setup-action@v1.14.0
        with:
          github_token: ${{ github.token }}
        env:
          BUF_USER: ${{ secrets.BUF_USER_NAME }}
          BUF_TOKEN: ${{ secrets.BUF_TOKEN }}
      - name: Run buf login
        run: |
          echo ${{ secrets.BUF_TOKEN }} |  buf registry login --username ${{ secrets.BUF_USER_NAME }} --token-stdin
      - name: Import GPG key
        id: import_gpg # id used for referencing step
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          # These secrets will need to be configured for the repository:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      - name: Install cosign
        uses: sigstore/cosign-installer@v2.5.0
      - name: Install syft
        uses: anchore/sbom-action/download-syft@v0.11.0
      - name: login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: release --rm-dist
        env:
          GOPRIVATE: go.buf.build
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          # GitHub sets this automatically
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          # HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.BOT_ACCESS_TOKEN }}
          BUF_USER: ${{ secrets.BUF_USER_NAME }}
          BUF_TOKEN: ${{ secrets.BUF_TOKEN }}
