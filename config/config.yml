database:
  dialect: sqlite3
  host: 0.0.0.0
  port: 9999
  username: sumo
  password: demo
  database: "file:account?mode=memory&cache=shared&_fk=1"
  max_open_conns: 1
  max_idle_conns: 1
  conn_max_lifetime: 1h
  logging: true
email:
  username: yourGmailUsername
  password: yourGmailAppPassword
  email_server: smtp.gmail.com
  port: 587
  from: from@gmail.com

services:
  account:
    authority: "account-service"
    version: v0.1.0
    endpoint: dns:///localhost:8080
    metadata:
      tenant_id: sumanth
  greeter:
#    authority: "greeter-service" TODO
    authority: "localhost"
    version: v0.1.0
    endpoint: dns:///localhost:8081
    #    endpoint: unix:///tmp/greeter.sock
    service_config: |
      {
        "loadBalancingPolicy": "round_robin",
        "methodConfig": [
        {
          "name": [
          {
            "service": "mkit.service.greeter.v1.GreeterService",
            "method": "Hello"
          }
          ],
          "waitForReady": false,
          "retryPolicy": {
            "maxAttempts": 3,
            "initialBackoff": "2.1s",
            "maxBackoff": "2.2s",
            "backoffMultiplier": 3,
            "retryableStatusCodes": [
              "UNAVAILABLE",
              "RESOURCE_EXHAUSTED"
            ]
          }
        }
        ],
        "retryThrottling": {
          "maxTokens": 10,
          "tokenRatio": 0.1
        }
      }
  emailer:
    authority: "emailer-service"
    version: v0.1.0
    endpoint: http://localhost:8082
  recorder:
    authority: "recorder-service"
    version: v0.1.0
    endpoint: http://localhost:8083
  play:
    authority: "play-service"
    version: v0.1.0
    endpoint: http://localhost:8084
  xds:
    authority: "xds-service"
    version: v0.1.0
    endpoint: http://localhost:8085

xds:
  max_concurrent_streams: 1000
  source_type: dns
  node_id: '25386353-c3e2-42f5-ad65-2b003c3386f5'
  refresh_interval: 30s
  kubernetes:
#    namespace: kube-system
    namespace: default
  dns:
    hostnames: ["www.google.com", "www.apple.com"]
#  static:
#    fs: all???
#  file:
#    fs:



features:
  metrics:
    enabled: false
    backend: prometheus # stdout, prometheus, gcp
    # :0 indicate you're not specifying an exact port, but you want a free, available port selected by the system.
    # In config.production.yml, we use fixed :9213 address
    endpoint: ":0"
    sampling_fraction: 1.0
    collect_period: 10s
    # histogram_distribution: [.005, .01, .025, .05, .1, .25, .5, 1, 2.5, 5, 10]
  tracing:
    enabled: false
    backend: stdout
    endpoint: "jaeger:6831"
    sampling_fraction: 1.0
  tls:
    cert_file: config/certs/upstream-localhost-cert.pem
    key_file: config/certs/upstream-localhost-key.pem
    ca_file: config/certs/upstream-ca-cert.pem
    server_name: "localhost"
    enabled: true
  validator:
    enabled: true
  rpclog:
    enabled: true
  translog:
    topic: mkit.service.recorder
    enabled: true
