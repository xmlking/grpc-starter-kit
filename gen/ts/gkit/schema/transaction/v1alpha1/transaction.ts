// @generated by protobuf-ts 2.4.0 with parameter long_type_string,generate_dependencies,// @generated from protobuf file "gkit/schema/transaction/v1alpha1/transaction.proto" (package "gkit.schema.transaction.v1alpha1", syntax proto3),// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Value } from "../../../../google/protobuf/struct";
/**
 * Transaction Event
 *
 * @generated from protobuf message gkit.schema.transaction.v1alpha1.TransactionEvent1
 */
export interface TransactionEvent1 {
    /**
     * request
     *
     * @generated from protobuf field: google.protobuf.Value req = 1;
     */
    req?: Value;
    /**
     * response
     *
     * @generated from protobuf field: google.protobuf.Value rsp = 2;
     */
    rsp?: Value;
}
// @generated message type with reflection information, may provide speed optimized methods
class TransactionEvent1$Type extends MessageType<TransactionEvent1> {
    constructor() {
        super("gkit.schema.transaction.v1alpha1.TransactionEvent1", [
            { no: 1, name: "req", kind: "message", T: () => Value },
            { no: 2, name: "rsp", kind: "message", T: () => Value }
        ]);
    }
    create(value?: PartialMessage<TransactionEvent1>): TransactionEvent1 {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TransactionEvent1>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TransactionEvent1): TransactionEvent1 {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.Value req */ 1:
                    message.req = Value.internalBinaryRead(reader, reader.uint32(), options, message.req);
                    break;
                case /* google.protobuf.Value rsp */ 2:
                    message.rsp = Value.internalBinaryRead(reader, reader.uint32(), options, message.rsp);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TransactionEvent1, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.Value req = 1; */
        if (message.req)
            Value.internalBinaryWrite(message.req, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Value rsp = 2; */
        if (message.rsp)
            Value.internalBinaryWrite(message.rsp, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message gkit.schema.transaction.v1alpha1.TransactionEvent1
 */
export const TransactionEvent1 = new TransactionEvent1$Type();
