// @generated by protobuf-ts 2.4.0 with parameter long_type_string,generate_dependencies,// @generated from protobuf file "gkit/service/greeter/v1/greeter_service.proto" (package "gkit.service.greeter.v1", syntax proto3),// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { GreeterService } from "./greeter_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { HelloResponse } from "./greeter_service";
import type { HelloRequest } from "./greeter_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service gkit.service.greeter.v1.GreeterService
 */
export interface IGreeterServiceClient {
    /**
     * Hello is echo method
     *
     * @generated from protobuf rpc: Hello(gkit.service.greeter.v1.HelloRequest) returns (gkit.service.greeter.v1.HelloResponse);
     */
    hello(input: HelloRequest, options?: RpcOptions): UnaryCall<HelloRequest, HelloResponse>;
}
/**
 * @generated from protobuf service gkit.service.greeter.v1.GreeterService
 */
export class GreeterServiceClient implements IGreeterServiceClient, ServiceInfo {
    typeName = GreeterService.typeName;
    methods = GreeterService.methods;
    options = GreeterService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Hello is echo method
     *
     * @generated from protobuf rpc: Hello(gkit.service.greeter.v1.HelloRequest) returns (gkit.service.greeter.v1.HelloResponse);
     */
    hello(input: HelloRequest, options?: RpcOptions): UnaryCall<HelloRequest, HelloResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<HelloRequest, HelloResponse>("unary", this._transport, method, opt, input);
    }
}
