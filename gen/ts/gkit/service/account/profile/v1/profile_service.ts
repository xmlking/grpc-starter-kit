// @generated by protobuf-ts 2.4.0 with parameter long_type_string,generate_dependencies,enable_angular_annotations,// @generated from protobuf file "gkit/service/account/profile/v1/profile_service.proto" (package "gkit.service.account.profile.v1", syntax proto3),// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "../../../../../google/protobuf/timestamp";
import { Profile } from "../../entities/v1/entities";
import { Profile_GenderType } from "../../entities/v1/entities";
import { StringValue } from "../../../../../google/protobuf/wrappers";
import { UInt32Value } from "../../../../../google/protobuf/wrappers";
/**
 * FIXME: https://github.com/envoyproxy/protoc-gen-validate/issues/223
 * Workaround in .override.go
 *
 * @generated from protobuf message gkit.service.account.profile.v1.ListRequest
 */
export interface ListRequest {
    /**
     * @generated from protobuf field: google.protobuf.UInt32Value limit = 1;
     */
    limit?: UInt32Value;
    /**
     * @generated from protobuf field: google.protobuf.UInt32Value page = 2;
     */
    page?: UInt32Value;
    /**
     * @generated from protobuf field: google.protobuf.StringValue sort = 3;
     */
    sort?: StringValue;
    /**
     * @generated from protobuf field: google.protobuf.StringValue preferred_theme = 4;
     */
    preferredTheme?: StringValue;
    /**
     * @generated from protobuf field: gkit.service.account.entities.v1.Profile.GenderType gender = 5;
     */
    gender: Profile_GenderType;
}
/**
 * @generated from protobuf message gkit.service.account.profile.v1.ListResponse
 */
export interface ListResponse {
    /**
     * @generated from protobuf field: repeated gkit.service.account.entities.v1.Profile results = 1;
     */
    results: Profile[];
    /**
     * @generated from protobuf field: uint32 total = 2;
     */
    total: number;
}
/**
 * @generated from protobuf message gkit.service.account.profile.v1.GetRequest
 */
export interface GetRequest {
    /**
     * @generated from protobuf oneof: id
     */
    id: {
        oneofKind: "profileId";
        /**
         * @generated from protobuf field: google.protobuf.StringValue profile_id = 1;
         */
        profileId: StringValue; // Not Working
    } | {
        oneofKind: "userId";
        /**
         * @generated from protobuf field: google.protobuf.StringValue user_id = 2;
         */
        userId: StringValue; // Not Working
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message gkit.service.account.profile.v1.GetResponse
 */
export interface GetResponse {
    /**
     * @generated from protobuf field: gkit.service.account.entities.v1.Profile result = 1;
     */
    result?: Profile;
}
/**
 * @generated from protobuf message gkit.service.account.profile.v1.CreateRequest
 */
export interface CreateRequest {
    /**
     * @generated from protobuf field: google.protobuf.StringValue user_id = 2;
     */
    userId?: StringValue; // Not Working
    /**
     * @generated from protobuf field: google.protobuf.StringValue tz = 3;
     */
    tz?: StringValue;
    /**
     * @generated from protobuf field: google.protobuf.StringValue avatar = 4;
     */
    avatar?: StringValue;
    /**
     * @generated from protobuf field: gkit.service.account.entities.v1.Profile.GenderType gender = 5;
     */
    gender: Profile_GenderType;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp birthday = 6;
     */
    birthday?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.StringValue preferred_theme = 7;
     */
    preferredTheme?: StringValue;
}
/**
 * @generated from protobuf message gkit.service.account.profile.v1.CreateResponse
 */
export interface CreateResponse {
    /**
     * @generated from protobuf field: gkit.service.account.entities.v1.Profile result = 1;
     */
    result?: Profile;
}
// @generated message type with reflection information, may provide speed optimized methods
class ListRequest$Type extends MessageType<ListRequest> {
    constructor() {
        super("gkit.service.account.profile.v1.ListRequest", [
            { no: 1, name: "limit", kind: "message", T: () => UInt32Value, options: { "validate.rules": { uint32: { lte: 100, gte: 1 } } } },
            { no: 2, name: "page", kind: "message", T: () => UInt32Value, options: { "validate.rules": { uint32: { gte: 1 } } } },
            { no: 3, name: "sort", kind: "message", T: () => StringValue },
            { no: 4, name: "preferred_theme", kind: "message", T: () => StringValue, options: { "validate.rules": { string: { in: ["dark", "light", "cosmic", "corporate"] } } } },
            { no: 5, name: "gender", kind: "enum", T: () => ["gkit.service.account.entities.v1.Profile.GenderType", Profile_GenderType, "GENDER_TYPE_"], options: { "validate.rules": { enum: { in: [0, 1, 2] } } } }
        ]);
    }
    create(value?: PartialMessage<ListRequest>): ListRequest {
        const message = { gender: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListRequest): ListRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.UInt32Value limit */ 1:
                    message.limit = UInt32Value.internalBinaryRead(reader, reader.uint32(), options, message.limit);
                    break;
                case /* google.protobuf.UInt32Value page */ 2:
                    message.page = UInt32Value.internalBinaryRead(reader, reader.uint32(), options, message.page);
                    break;
                case /* google.protobuf.StringValue sort */ 3:
                    message.sort = StringValue.internalBinaryRead(reader, reader.uint32(), options, message.sort);
                    break;
                case /* google.protobuf.StringValue preferred_theme */ 4:
                    message.preferredTheme = StringValue.internalBinaryRead(reader, reader.uint32(), options, message.preferredTheme);
                    break;
                case /* gkit.service.account.entities.v1.Profile.GenderType gender */ 5:
                    message.gender = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.UInt32Value limit = 1; */
        if (message.limit)
            UInt32Value.internalBinaryWrite(message.limit, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.UInt32Value page = 2; */
        if (message.page)
            UInt32Value.internalBinaryWrite(message.page, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.StringValue sort = 3; */
        if (message.sort)
            StringValue.internalBinaryWrite(message.sort, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.StringValue preferred_theme = 4; */
        if (message.preferredTheme)
            StringValue.internalBinaryWrite(message.preferredTheme, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* gkit.service.account.entities.v1.Profile.GenderType gender = 5; */
        if (message.gender !== 0)
            writer.tag(5, WireType.Varint).int32(message.gender);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message gkit.service.account.profile.v1.ListRequest
 */
export const ListRequest = new ListRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListResponse$Type extends MessageType<ListResponse> {
    constructor() {
        super("gkit.service.account.profile.v1.ListResponse", [
            { no: 1, name: "results", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Profile },
            { no: 2, name: "total", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ], { "validate.disabled": true });
    }
    create(value?: PartialMessage<ListResponse>): ListResponse {
        const message = { results: [], total: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListResponse): ListResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated gkit.service.account.entities.v1.Profile results */ 1:
                    message.results.push(Profile.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* uint32 total */ 2:
                    message.total = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated gkit.service.account.entities.v1.Profile results = 1; */
        for (let i = 0; i < message.results.length; i++)
            Profile.internalBinaryWrite(message.results[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* uint32 total = 2; */
        if (message.total !== 0)
            writer.tag(2, WireType.Varint).uint32(message.total);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message gkit.service.account.profile.v1.ListResponse
 */
export const ListResponse = new ListResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetRequest$Type extends MessageType<GetRequest> {
    constructor() {
        super("gkit.service.account.profile.v1.GetRequest", [
            { no: 1, name: "profile_id", kind: "message", oneof: "id", T: () => StringValue, options: { "validate.rules": { string: { uuid: true } } } },
            { no: 2, name: "user_id", kind: "message", oneof: "id", T: () => StringValue, options: { "validate.rules": { string: { uuid: true } } } }
        ]);
    }
    create(value?: PartialMessage<GetRequest>): GetRequest {
        const message = { id: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetRequest): GetRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.StringValue profile_id */ 1:
                    message.id = {
                        oneofKind: "profileId",
                        profileId: StringValue.internalBinaryRead(reader, reader.uint32(), options, (message.id as any).profileId)
                    };
                    break;
                case /* google.protobuf.StringValue user_id */ 2:
                    message.id = {
                        oneofKind: "userId",
                        userId: StringValue.internalBinaryRead(reader, reader.uint32(), options, (message.id as any).userId)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.StringValue profile_id = 1; */
        if (message.id.oneofKind === "profileId")
            StringValue.internalBinaryWrite(message.id.profileId, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.StringValue user_id = 2; */
        if (message.id.oneofKind === "userId")
            StringValue.internalBinaryWrite(message.id.userId, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message gkit.service.account.profile.v1.GetRequest
 */
export const GetRequest = new GetRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetResponse$Type extends MessageType<GetResponse> {
    constructor() {
        super("gkit.service.account.profile.v1.GetResponse", [
            { no: 1, name: "result", kind: "message", T: () => Profile }
        ], { "validate.disabled": true });
    }
    create(value?: PartialMessage<GetResponse>): GetResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetResponse): GetResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* gkit.service.account.entities.v1.Profile result */ 1:
                    message.result = Profile.internalBinaryRead(reader, reader.uint32(), options, message.result);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* gkit.service.account.entities.v1.Profile result = 1; */
        if (message.result)
            Profile.internalBinaryWrite(message.result, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message gkit.service.account.profile.v1.GetResponse
 */
export const GetResponse = new GetResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateRequest$Type extends MessageType<CreateRequest> {
    constructor() {
        super("gkit.service.account.profile.v1.CreateRequest", [
            { no: 2, name: "user_id", kind: "message", T: () => StringValue, options: { "validate.rules": { string: { uuid: true } } } },
            { no: 3, name: "tz", kind: "message", T: () => StringValue },
            { no: 4, name: "avatar", kind: "message", T: () => StringValue, options: { "validate.rules": { string: { uriRef: true } } } },
            { no: 5, name: "gender", kind: "enum", T: () => ["gkit.service.account.entities.v1.Profile.GenderType", Profile_GenderType, "GENDER_TYPE_"], options: { "validate.rules": { enum: { in: [0, 1, 2] } } } },
            { no: 6, name: "birthday", kind: "message", T: () => Timestamp, options: { "validate.rules": { timestamp: { ltNow: true } } } },
            { no: 7, name: "preferred_theme", kind: "message", T: () => StringValue, options: { "validate.rules": { string: { in: ["dark", "light", "cosmic", "corporate"], ignoreEmpty: true } } } }
        ]);
    }
    create(value?: PartialMessage<CreateRequest>): CreateRequest {
        const message = { gender: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CreateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateRequest): CreateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.StringValue user_id */ 2:
                    message.userId = StringValue.internalBinaryRead(reader, reader.uint32(), options, message.userId);
                    break;
                case /* google.protobuf.StringValue tz */ 3:
                    message.tz = StringValue.internalBinaryRead(reader, reader.uint32(), options, message.tz);
                    break;
                case /* google.protobuf.StringValue avatar */ 4:
                    message.avatar = StringValue.internalBinaryRead(reader, reader.uint32(), options, message.avatar);
                    break;
                case /* gkit.service.account.entities.v1.Profile.GenderType gender */ 5:
                    message.gender = reader.int32();
                    break;
                case /* google.protobuf.Timestamp birthday */ 6:
                    message.birthday = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.birthday);
                    break;
                case /* google.protobuf.StringValue preferred_theme */ 7:
                    message.preferredTheme = StringValue.internalBinaryRead(reader, reader.uint32(), options, message.preferredTheme);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CreateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.StringValue user_id = 2; */
        if (message.userId)
            StringValue.internalBinaryWrite(message.userId, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.StringValue tz = 3; */
        if (message.tz)
            StringValue.internalBinaryWrite(message.tz, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.StringValue avatar = 4; */
        if (message.avatar)
            StringValue.internalBinaryWrite(message.avatar, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* gkit.service.account.entities.v1.Profile.GenderType gender = 5; */
        if (message.gender !== 0)
            writer.tag(5, WireType.Varint).int32(message.gender);
        /* google.protobuf.Timestamp birthday = 6; */
        if (message.birthday)
            Timestamp.internalBinaryWrite(message.birthday, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.StringValue preferred_theme = 7; */
        if (message.preferredTheme)
            StringValue.internalBinaryWrite(message.preferredTheme, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message gkit.service.account.profile.v1.CreateRequest
 */
export const CreateRequest = new CreateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateResponse$Type extends MessageType<CreateResponse> {
    constructor() {
        super("gkit.service.account.profile.v1.CreateResponse", [
            { no: 1, name: "result", kind: "message", T: () => Profile }
        ], { "validate.disabled": true });
    }
    create(value?: PartialMessage<CreateResponse>): CreateResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CreateResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateResponse): CreateResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* gkit.service.account.entities.v1.Profile result */ 1:
                    message.result = Profile.internalBinaryRead(reader, reader.uint32(), options, message.result);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CreateResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* gkit.service.account.entities.v1.Profile result = 1; */
        if (message.result)
            Profile.internalBinaryWrite(message.result, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message gkit.service.account.profile.v1.CreateResponse
 */
export const CreateResponse = new CreateResponse$Type();
/**
 * @generated ServiceType for protobuf service gkit.service.account.profile.v1.ProfileService
 */
export const ProfileService = new ServiceType("gkit.service.account.profile.v1.ProfileService", [
    { name: "List", options: {}, I: ListRequest, O: ListResponse },
    { name: "Get", options: {}, I: GetRequest, O: GetResponse },
    { name: "Create", options: {}, I: CreateRequest, O: CreateResponse }
]);
