// @generated by protobuf-ts 2.4.0 with parameter long_type_string,generate_dependencies,enable_angular_annotations,// @generated from protobuf file "gkit/service/account/profile/v1/profile_service.proto" (package "gkit.service.account.profile.v1", syntax proto3),// tslint:disable
import { Inject } from "@angular/core";
import { RPC_TRANSPORT } from "@protobuf-ts/runtime-angular";
import { Injectable } from "@angular/core";
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ProfileService } from "./profile_service";
import type { CreateResponse } from "./profile_service";
import type { CreateRequest } from "./profile_service";
import type { GetResponse } from "./profile_service";
import type { GetRequest } from "./profile_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ListResponse } from "./profile_service";
import type { ListRequest } from "./profile_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service gkit.service.account.profile.v1.ProfileService
 */
export interface IProfileServiceClient {
    /**
     * @generated from protobuf rpc: List(gkit.service.account.profile.v1.ListRequest) returns (gkit.service.account.profile.v1.ListResponse);
     */
    list(input: ListRequest, options?: RpcOptions): UnaryCall<ListRequest, ListResponse>;
    /**
     * @generated from protobuf rpc: Get(gkit.service.account.profile.v1.GetRequest) returns (gkit.service.account.profile.v1.GetResponse);
     */
    get(input: GetRequest, options?: RpcOptions): UnaryCall<GetRequest, GetResponse>;
    /**
     * @generated from protobuf rpc: Create(gkit.service.account.profile.v1.CreateRequest) returns (gkit.service.account.profile.v1.CreateResponse);
     */
    create(input: CreateRequest, options?: RpcOptions): UnaryCall<CreateRequest, CreateResponse>;
}
/**
 * @generated from protobuf service gkit.service.account.profile.v1.ProfileService
 */
@Injectable()
export class ProfileServiceClient implements IProfileServiceClient, ServiceInfo {
    typeName = ProfileService.typeName;
    methods = ProfileService.methods;
    options = ProfileService.options;
    constructor(
    @Inject(RPC_TRANSPORT)
    private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: List(gkit.service.account.profile.v1.ListRequest) returns (gkit.service.account.profile.v1.ListResponse);
     */
    list(input: ListRequest, options?: RpcOptions): UnaryCall<ListRequest, ListResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListRequest, ListResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Get(gkit.service.account.profile.v1.GetRequest) returns (gkit.service.account.profile.v1.GetResponse);
     */
    get(input: GetRequest, options?: RpcOptions): UnaryCall<GetRequest, GetResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetRequest, GetResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Create(gkit.service.account.profile.v1.CreateRequest) returns (gkit.service.account.profile.v1.CreateResponse);
     */
    create(input: CreateRequest, options?: RpcOptions): UnaryCall<CreateRequest, CreateResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateRequest, CreateResponse>("unary", this._transport, method, opt, input);
    }
}
