# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
project_name: grpc-starter-kit
env:
  - CGO_ENABLED=0
#  - GOWORK=off
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...
# setup builds for linux and darwin on amd64 and arm64
# https://goreleaser.com/customization/build
builds:
  - id: account-cli
    binary: account-cli
    goos: [ linux, darwin, windows ]
    goarch: [ amd64, arm64 ]
    main: ./cmd/account/
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{ .Version }} -X main.commit={{ .Commit }} -X main.date={{ .CommitDate }} -X main.builtBy=goreleaser
  - id: account
    binary: account
    goos: [ linux ]
    goarch: [ amd64, arm64 ]
    main: ./service/account/
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{ .Version }} -X main.commit={{ .Commit }} -X main.date={{ .CommitDate }} -X main.builtBy=goreleaser
  - id: emailer
    binary: emailer
    goos: [ linux ]
    goarch: [ amd64, arm64 ]
    main: ./service/emailer/
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{ .Version }} -X main.commit={{ .Commit }} -X main.date={{ .CommitDate }} -X main.builtBy=goreleaser

# Verifiable Builds
# https://goreleaser.com/customization/verifiable_builds/
# FIXME: this is not working yet
#gomod:
#  proxy: true
#  env:
#    - GOPROXY=https://proxy.golang.org,direct
#    - GOSUMDB=sum.golang.org
#    - GOPRIVATE=go.buf.build

# config the binaries archives
# https://goreleaser.com/customization/archive/
archives:
  - builds: [account-cli]
    allow_different_binary_count: true
    replacements:
      darwin: MacOS
      linux: Linux
      windows: Windows
      386: i386
      amd64: x86_64
    files: # Additional files
      - config/certs/*.pem

# customize release notes
# https://goreleaser.com/customization/release/
release:
  header: |
    Welcome to this new release!
  footer: |
    ## Docker Images
    - docker pull `ghcr.io/xmlking/grpc-starter-kit/account:latest`
    - docker pull `ghcr.io/xmlking/grpc-starter-kit/account:{{ .Tag }}`
    - docker pull `ghcr.io/xmlking/grpc-starter-kit/account:{{ .Tag }}-amd64`
    - docker pull `ghcr.io/xmlking/grpc-starter-kit/account:{{ .Tag }}-arm64`
# customize how the changelog is generated
# https://goreleaser.com/customization/changelog/
changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - '^draft'
      - '^wip'
      - 'merge conflict'
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
      - go mod tidy
  groups:
    - title: 'New Features and updates'
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 100
    - title: 'Bug fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 200
    - title: 'Documentation'
      regexp: "^.*docs[(\\w)]*:+.*$"
      order: 300
    - title: 'Dependency updates'
      regexp: "^.*chore\\(deps\\)*:+.*$"
      order: 400
    - title: Others
      order: 999

# create a source tarball
# https://goreleaser.com/customization/source/
source:
  enabled: true

# creates SBOMs of all archives and the source tarball using syft
# https://goreleaser.com/customization/sbom
sboms:
  - artifacts: archive
  - id: source # Two different sbom configurations need two different IDs
    artifacts: source

# signs the checksum file
# all files (including the sboms) are included in the checksum, so we don't need to sign each one if we don't want to
# https://goreleaser.com/customization/sign
# Example keyless signing with SBOMs goreleaser config.
# See also: .github/workflows/release.yml
signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    certificate: '${artifact}.pem'
    args:
      - sign-blob
      - '--output-certificate=${certificate}'
      - '--output-signature=${signature}'
      - '${artifact}'
    artifacts: checksum
    output: true

# create multi-arch docker images
# https://goreleaser.com/customization/docker
dockers:
  - id: account-amd64
    use: buildx
    goarch: amd64
    dockerfile: Dockerfile
    image_templates:
      - 'ghcr.io/xmlking/grpc-starter-kit/account:{{ .Tag }}-amd64'
    extra_files:
      - config
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.description=Account Service linux-amd64"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - '--label=org.opencontainers.image.source={{ trimsuffix .GitURL ".git" }}'
      - "--platform=linux/amd64"
  - id: account-arm64
    use: buildx
    goarch: arm64
    dockerfile: Dockerfile
    image_templates:
      - 'ghcr.io/xmlking/grpc-starter-kit/account:{{ .Tag }}-arm64'
    extra_files:
      - config
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.description=Account Service linux-arm64"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - '--label=org.opencontainers.image.source={{ trimsuffix .GitURL ".git" }}'
      - "--platform=linux/arm64"

docker_manifests:
  - name_template: 'ghcr.io/xmlking/grpc-starter-kit/account:{{ .Tag }}'
    image_templates:
      - 'ghcr.io/xmlking/grpc-starter-kit/account:{{ .Tag }}-amd64'
      - 'ghcr.io/xmlking/grpc-starter-kit/account:{{ .Tag }}-arm64'
  - name_template: 'ghcr.io/xmlking/grpc-starter-kit/account:latest'
    image_templates:
      - 'ghcr.io/xmlking/grpc-starter-kit/account:{{ .Tag }}-amd64'
      - 'ghcr.io/xmlking/grpc-starter-kit/account:{{ .Tag }}-arm64'

# signs our docker image
# https://goreleaser.com/customization/docker_sign
docker_signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    artifacts: images
    output: true
    args:
      - 'sign'
      - '${artifact}'

#brews:
#  - tap:
#      owner: xmlking
#      name: homebrew-tap
#    folder: Formula
#    homepage:  https://github.com/xmlking/grpc-starter-kit
#    description: tz is a policy management tool
#    test: |
#      system "#{bin}/tz version"

announce:
  slack:
    enabled: true
    channel: '#release'
